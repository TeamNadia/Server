  function searchQuery(){
       // prepare the request
       var request = gapi.client.youtube.search.list({
            part: "snippet",
            type: "video",
            //change: #search to message received from user
            q: encodeURIComponent($("#search").val()).replace(/%20/g, "+"),
            maxResults: 2,
            order: "relevance"
       });
       // execute the request
       request.execute(function(response) {
          var results = response.result;
          videoID = results.items[0].id.videoId;
          videoURL = "https://www.youtube.com/watch?v=" + videoID;
       });
  });

var videoID;
var videoURL;

var playlistId;
var playListURL
var isPlaylistCreated = false;

function init() {
  //Load the youtube API
    gapi.client.setApiKey("YOUR_PUBLIC_KEY");
    gapi.client.load("youtube", "v3", function() {
        //youtube api is ready

        //loop
        searchQuery();
        createPlaylist();

        if(isPlaylistCreated == false){
          playListURL = "https://www.youtube.com/watch?v=" + videoURL + "&list=" + playlistId + "&index=1";
          //open URL
        }else{
          addVideoToPlaylist(videoID);
        }
    });
}

//PLAYLIST

// Create a private playlist.
function createPlaylist() {
  var request = gapi.client.youtube.playlists.insert({
    part: 'snippet,status',
    resource: {
      snippet: {
        title: 'Playlist - top votes',
        description: 'Your playlist, generated by your votes!'
      },
      status: {
        privacyStatus: 'private'
      }
    }
  });
  request.execute(function(response) {
    var result = response.result;
    if (result) {
      playlistId = result.id;
      $('#playlist-id').val(playlistId);
      $('#playlist-title').html(result.snippet.title);
      $('#playlist-description').html(result.snippet.description);
    } else {
      $('#status').html('Could not create playlist');
    }
  });
}

// Add a video ID specified in the form as #video-id to the playlist.
function addVideoToPlaylist(vidID) {
  addToPlaylist(vidID);
}

// Add a video to a playlist. The "startPos" and "endPos" values let you
// start and stop the video at specific times when the video is played as
// part of the playlist. However, these values are not set in this example.
function addToPlaylist(id, startPos, endPos) {
  var details = {
    videoId: id,
    kind: 'youtube#video'
  }
  if (startPos != undefined) {
    details['startAt'] = startPos;
  }
  if (endPos != undefined) {
    details['endAt'] = endPos;
  }
  var request = gapi.client.youtube.playlistItems.insert({
    part: 'snippet',
    resource: {
      snippet: {
        playlistId: playlistId,
        resourceId: details
      }
    }
  });
  request.execute(function(response) {
    $('#status').html('<pre>' + JSON.stringify(response.result) + '</pre>');
  });
}
